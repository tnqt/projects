# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        
      - name: Install Flutter
        run: |
          # git clone --depth 1 https://github.com/flutter/flutter.git -b stable --depth 1
          git clone https://github.com/flutter/flutter.git
          source $HOME/.bash_profile
          export PATH="$PATH:`pwd`/flutter/bin"
          echo $PATH
          which flutter
          source $HOME/.bashrc
          
      - name: List files in flutter/bin
        run: ls flutter/bin

      - name: Add Flutter to PATH
        run: echo $PATH
        
      - name: Add Flutter to PATH
        run: echo $PWD/flutter/bin >> $GITHUB_PATH
        
      - name: Print PATH
        run: echo $PATH
      
      - name: Flutter version
        working-directory: store_management
        run: flutter --version

      - name: Configure Git
        working-directory: store_management
        run: git config --global user.name TN && git config --global user.email nxthao0701@gmail.com

      - name: Go to submodules
        working-directory: store_management
        run: cd submodules

      - name: clone submodules
        working-directory: store_management
        run: git clone --recursive https://github.com/tnqt/sub_module.git && cd sub_module && cd data_layer && ls
        
      - name: Install dependencies
        working-directory: store_management
        run: pwd && ls && flutter pub get
  
      - name: Save state
        run: echo "{name}={value}" >> $GITHUB_STATE

      - name: Set output
        run: echo "{name}={value}" >> $GITHUB_OUTPUT
  
      - name: Run tests
        working-directory: store_management
        run: flutter test
        


      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
#       - name: Analyze project source
#         working-directory: coffee_restaurant
#         run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
#       - name: Run tests
#         working-directory: coffee_restaurant
#         run: dart test
